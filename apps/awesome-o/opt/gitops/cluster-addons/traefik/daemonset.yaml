kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: traefik-controller
  labels:
    app: traefik
    role: ingress-controller
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
        role: ingress-controller
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: "traefik:v2.3"
          args:
            - --api
            - --api.dashboard
            - --entrypoints.dashboard
            - --accesslog=true
            - --entrypoints.web.Address=:80
            - --entrypoints.websecure.Address=:443
            - --providers.kubernetescrd
            - --providers.kubernetesingress
            - --metrics.prometheus=true
            - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
            - --metrics.prometheus.addEntryPointsLabels=true
            - --metrics.prometheus.addServicesLabels=true
            - --entryPoints.metrics.address=:8080
            - --metrics.prometheus.entryPoint=metrics
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
            - name: websecure
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: 100Mi
              cpu: 25m
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  minReadySeconds: 5
